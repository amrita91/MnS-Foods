-- Load all the raw forecast data into an external table called daily_forecast

create external table daily_forecast
(
upc string, store_code string, country_code string, product_group_code string, start_date string, 
Units1 int, Value1 int, 
Units2 int, Value2 int, 
Units3 int, Value3 int, 
Units4 int, Value4 int, 
Units5 int, Value5 int, 
Units6 int, Value6 int, 
Units7 int, Value7 int, 
Units8 int, Value8 int, 
Units9 int, Value9 int, 
Units10 int, Value10 int, 
Units11 int, Value11 int, 
Units12 int, Value12 int, 
Units13 int, Value13 int, 
Units14 int, Value14 int, 
Units15 int, Value15 int, 
Units16 int, Value16 int, 
Units17 int, Value17 int, 
Units18 int, Value18 int, 
Units19 int, Value19 int, 
Units20 int, Value20 int, 
Units21 int, Value21 int, 
Units22 int, Value22 int, 
Units23 int, Value23 int, 
Units24 int, Value24 int, 
Units25 int, Value25 int, 
Units26 int, Value26 int, 
Units27 int, Value27 int, 
Units28 int, Value28 int
)
row format delimited 
fields terminated by ','
stored as textfile
location 'asv://dailyforecast@saahadoop.blob.core.windows.net/forecastF01C'
;


-- Transposing the forecast data in the desired form (in terms of sale dates instead of start dates), Step1: Create individual tables for each of the 28 forecasts for every sale date

-- Create table for forecast made on day-0

create table forecast1 
as 
select upc, storecode, date_add(from_unixtime(unix_timestamp(startdate,'yyyyMMdd'),'yyyy-MM-dd'),0) as businessdateid, units1 
from 
daily_forecast
;

-- Create table for forecast made on day-1

create table forecast2 
as 
select upc, storecode, date_add(from_unixtime(unix_timestamp(startdate,'yyyyMMdd'),'yyyy-MM-dd'),1) as businessdateid, units2 
from 
daily_forecast
;

-- ........ similarly create tables till forecast made on day-27

create table forecast28 
as select 
upc, storecode, date_add(from_unixtime(unix_timestamp(startdate,'yyyyMMdd'),'yyyy-MM-dd'),27) as businessdateid, units28 
from 
daily_forecast
;


-- cross join an external dates table to the forecast1 table to ensure that all the dates between 26th june-28th sept are covered


create external table dates
(
dates string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://dailyforecast@saahadoop.blob.core.windows.net/dates'
;

create table newdates 
as 
select date_add(from_unixtime(unix_timestamp(dates,'yyyyMMdd'),'yyyy-MM-dd'),0) as dates 
from 
dates
;

create table jointemp 
as 
select a.upc, a.storecode, b.dates 
from 
(
select upc, suppliercode from forecastgrouped group by upc, suppliercode
) 
a cross join newdates b
;

create table forecast1new 
as 
select a.*,b.units1 
from 
jointemp a 
left outer join 
forecast1 b 
on 
a.upc=b.upc and a.suppliercode=b.suppliercode and a.dates=b.businessdateid
; 



-- Combine all the individual tables formed into one dataset

create table join1 
as 
select a.*, b.units2 
from 
forecast1new a 
left outer join 
forecast2 b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.dates=b.businessdateid
;

create table join2 
as 
select a.*, b.units3 
from 
join1 a 
left outer join 
forecast3 b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.dates=b.businessdateid
;

create table join3 
as 
select a.*, b.units4 
from 
join2 a 
left outer join 
forecast4 b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.dates=b.businessdateid
;

.
.
.
.
.
.
.
.
create table join26 
as 
select a.*, b.units27 
from 
join25 a 
left outer join 
forecast27 b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.dates=b.businessdateid
;

create table join27 
as 
select a.*, b.units28 
from 
join26 a 
left outer join 
forecast28 b 
on a.upc=b.upc and a.storecode=b.storecode and a.dates=b.businessdateid
;


create external table final_forecast
(
upc int, storecode int, businessdateid string, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://finalforecast@saahadoop.blob.core.windows.net/finalforecast'
;

insert into table final_forecast
select * 
from join27
;


-- Subset the forecast data after excluding records with all 28 NULL forecasts

create external table forecast_final 
(
upc int, storecode int, businessdateid string, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://finalforecast@saahadoop.blob.core.windows.net/forecastfinal'
;

insert into table forecast_final 
select * 
from final_forecast2 
where 
day0 is not NULL or
day1 is not NULL or
day2 is not NULL or
day3 is not NULL or
day4 is not NULL or
day5 is not NULL or
day6 is not NULL or
day7 is not NULL or
day8 is not NULL or
day9 is not NULL or
day10 is not NULL or
day11 is not NULL or
day12 is not NULL or
day13 is not NULL or
day14 is not NULL or
day15 is not NULL or
day16 is not NULL or
day17 is not NULL or
day18 is not NULL or
day19 is not NULL or
day20 is not NULL or
day21 is not NULL or
day22 is not NULL or
day23 is not NULL or
day24 is not NULL or
day25 is not NULL or
day26 is not NULL or
day27 is not NULL
;


--New Forecast subsetted for ranged UPCs

create external table new_forecast
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://finalforecast@saahadoop.blob.core.windows.net/newforecast'
;


--Merge forecast with sales

create external table forecast_sales_lead 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/forecastsaleslead'
;

insert overwrite table forecast_sales_lead 
select a.*, b.customersalesquantity, b.correctedsalesquantity, b.endofdaystockquantity 
from 
new_forecast a 
left outer join 
cs_final_nn b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.businessdateid=b.businessdateid
;


-- Load the selling price data onto the forecats dataset

create external table sellingprice_20131023_2
(
upc int, sellingprice float
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asvs://errordataset@saahadoop.blob.core.windows.net/sellingprice_20131023'
;

insert into table sellingprice_20131023_2 
select * 
from sellingprice_20131023_2
;


-- Merge forecast-sales with lead and selling price


create external table csf_sp_temp 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfsptemp'
;

insert overwrite table csf_sp_temp 
select a.*,b.sellingprice 
from 
forecast_sales_lead a 
left outer join 
sellingprice_20131023_2 b 
on 
a.upc=b.upc
;


--  Substituting price as 2.5 for unavailable data

create external table csf_lt_sp
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfltsp'
;

insert overwrite table csf_lt_sp 
select upc, storecode, businessdateid, days, leadtime, day0, day1, day2, day3, day4, day5, day6, day7, day8, day9, day10, day11, day12, day13, day14, day15, day16, day17, day18, day19, day20, day21, day22, day23, day24, day25, day26, day27, customersalesquantity, correctedsalesquantity, endofdaystockquantity, 
case when price is NULL then 
2.5 
else price 
end as price 
from csf_sp_temp
;


-- Replacing the NULL sales values by 0 wherever forecast data is present

create external table csf_lt_sp1
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price float
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfltsp1'
;

insert into table csf_lt_sp1 
select upc, storecode, businessdateid, days, leadtime, day0, day1, day2, day3, day4, day5, day6, day7, day8, day9, day10, day11, day12, day13, day14, day15, day16, day17, day18, day19, day20, day21, day22, day23, day24, day25, day26, day27, 
case when 
customersalesquantity<0 or customersalesquantity is NULL 
then 0 
else customersalesquantity 
end, 
case when 
correctedsalesquantity<0 or correctedsalesquantity is NULL 
then 0 
else correctedsalesquantity 
end,  
case when 
endofdaystockquantity<0 or endofdaystockquantity is NULL 
then 0 
else endofdaystockquantity 
end, 
price 
from csf_lt_sp
;


--New corrected sales file


create external table new_cs 
(
upc int, storecode int, businessdateid string, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/newcs'
;

insert into table new_cs 
select upc, storecode, businessdateid, customersalesquantity, correctedsalesquantity, endofdaystockquantity 
from csf_lt_sp1
;


--Calculating ROS


create external table wknum_cs 
(
upc int, storecode int, businessdateid string, wknum int, correctedsalesquantity int
) 
row format delimited 
fields terminated by ',' 
stored as textfile location 'asv://errordataset@saahadoop.blob.core.windows.net/wknumcs'
;

insert into table wknum_cs
select upc, storecode, businessdateid, weekofyear(businessdateid) as wknum, correctedsalesquantity
from new_cs
;


create external table wk_rollup 
(
upc int, storecode int, wknum int, sumcs int, days int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/wkrollup'
;

insert into table wk_rollup 
select upc, storecode, wknum, sum(correctedsalesquantity) as sumcs, count(businessdateid) as days 
from wknum_cs
group by upc, storecode, wknum
;


create external table wk_ros 
(
upc int, storecode int, wknum int, sumcs int, days int, wk_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/wkros'
;

insert into table wk_ros 
select upc, storecode, wknum, sumcs, days,(sumcs/days) as wk_ros 
from wk_rollup
;


create external table mnum_cs 
(
upc int, storecode int, wknum int, mnum string, sumcs int, days int, wk_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/mnumcs' 
;

insert into table mnum_cs 
select upc, storecode, wknum, 
case when 
wknum in (26,27,28,29,30) 
then 'm1' 
when wknum in (31,32,33,34,35) 
then 'm2' 
when wknum in (36,37,38,39) 
then 'm3' 
else 'm4' 
end as mnum, 
sumcs, days, wk_ros 
from wk_ros
;


create external table m_rollup 
(
upc int, storecode int, mnum string, sumcs int, days int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/mrollup'
;

insert into table m_rollup  
select upc, storecode, mnum, sum(sumcs) as sumcs, sum(days) as days 
from mnum_cs 
group by upc, storecode, mnum
;


create external table m_ros 
(
ups int, storecode int, mnum string, sumcs int, days int, m_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/mros'
;

insert into table m_ros  
select upc, storecode, mnum, sumcs, days, (sumcs/days) as m_ros 
from m_rollup
;


create external table full_rollup 
(
upc int, storecode int, sumcs int, days int) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/fullrollup'
;

insert into table full_rollup 
select ups, storecode, sum(sumcs) as sumcs, sum(days) as days 
from m_ros 
group by ups, storecode
;


create external table full_ros 
(
upc int, storecode int, sumcs int, days int, full_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/fullros'
;

insert into table full_ros  
select upc, storecode, sumcs, days, (sumcs/days) as full_ros 
from full_rollup
;


create external table m_full_ros 
(
upc int, storecode int, mnum string, m_ros double, full_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/mfullros'
;

insert into table m_full_ros 
select a.ups, a.storecode, a.mnum, a.m_ros, b.full_ros 
from 
m_ros a 
inner join 
full_ros b 
on 
a.ups=b.upc and a.storecode=b.storecode
;


create external table wk_m_full_ros 
(
upc int, storecode int, wknum int, mnum string, wk_ros double, m_ros double, full_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/wkmfullros'
;

insert into table wk_m_full_ros 
select a.upc, a.storecode, a.wknum, a.mnum, a.wk_ros, b.m_ros, b.full_ros 
from 
mnum_cs a 
inner join 
m_full_ros b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.mnum=b.mnum
;


create external table ros_final 
(
upc int, storecode int, businessdateid string, wknum int, wk_ros double, m_ros double, full_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/rosfinal'
;

insert into table ros_final 
select a.upc, a.storecode, a.businessdateid, a.wknum, b.wk_ros, b.m_ros, b.full_ros 
from 
wknum_cs a 
inner join 
wk_m_full_ros b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.wknum=b.wknum
;


--Join ROS to dataset


create external table csf_ros 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, wk_ros double, m_ros double, full_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfros'
;

insert into table csf_ros 
select a.*, b.wk_ros, b.m_ros, b.full_ros 
from 
csf_lt_sp1 a 
inner join 
ros_final b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.businessdateid=b.businessdateid
;


create external table csf_ros1 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, ros double, full_ros double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfros1'
;

insert into table csf_ros1 
select upc, storecode, businessdateid, days, leadtime, day0, day1, day2, day3, day4, day5, day6, day7, day8, day9, day10, day11, day12, day13, day14, day15, day16, day17, day18, day19, day20, day21, day22, day23, day24, day25, day26, day27, customersalesquantity, correctedsalesquantity, endofdaystockquantity, price, 
case when 
wk_ros=0 or wk_ros is NULL 
then m_ros 
else wk_ros 
end as ros, 
full_ros 
from csf_ros
;


create external table csf_ros_final 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfrosfinal'
;

insert into table csf_ros_final 
select upc, storecode, businessdateid, days, leadtime, day0, day1, day2, day3, day4, day5, day6, day7, day8, day9, day10, day11, day12, day13, day14, day15, day16, day17, day18, day19, day20, day21, day22, day23, day24, day25, day26, day27, customersalesquantity, correctedsalesquantity, endofdaystockquantity, 
case when ros=0 or ros is NULL 
then full_ros 
else ros 
end as ros, price 
from csf_ros1
;


-- Add new product categories


create external table csf_newcat 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, productcategory string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfnewcat' 
;

insert into table csf_newcat 
select a.*,b.productcategory 
from 
csf_ros_final a 
left outer join 
victoria2 b 
on 
a.upc=b.upc
;


--Add store groups and remove stores which resemble RDCs


create external table csf_stg1 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, productcategory string, stg string, stgname string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfstg1'
;

insert into table csf_stg1 
select a.*, b.stg, b.stg_name as stgname 
from 
csf_newcat a 
left outer join 
stores_depot_stg b 
on 
a.storecode=b.storecode
;


create external table csf_stg2 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, productcategory string, stg string, stgname string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfstg2'
;

insert overwrite table csf_stg2 
select upc, storecode, businessdateid, days, leadtime, day0, day1, day2, day3, day4, day5, day6, day7, day8, day9, day10, day11, day12, day13, day14, day15, day16, day17, day18, day19, day20, day21, day22, day23, day24, day25, day26, day27, customersalesquantity, correctedsalesquantity, endofdaystockquantity, ros, price, productcategory,
case when 
storecode in (1575,8837,7391,91) 
then 'SMLTO' 
else stg 
end as stg, 
case when storecode in (1575,8837,7391,91) 
then 'SMALL TOWN' 
else stgname 
end as stgname 
from csf_stg1
;


create external table csf_stg 
(
upc int, storecode int, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, productcategory string, stg string, stgname string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfstg'
;

insert overwrite table csf_stg 
select * 
from csf_stg2 
where stg is not NULL
;


-- Add storenames


create external table csf_final_storename 
(
upc int, storecode int, storename string, stg string, stgname string, productcategory string, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csffinalstorename'
;

insert overwrite table csf_final_storename 
select a.upc, a.storecode, b.store_name, a.stg, a.stgname, a.productcategory, a.businessdateid, a.days, a.leadtime, a.day0, a.day1, a.day2, a.day3, a.day4, a.day5, a.day6, a.day7, a.day8, a.day9, a.day10, a.day11, a.day12, a.day13, a.day14, a.day15, a.day16, a.day17, a.day18, a.day19, a.day20, a.day21, a.day22, a.day23, a.day24, a.day25, a.day26, a.day27, a.customersalesquantity, a.correctedsalesquantity, a.endofdaystockquantity, a.ros, a.price 
from 
csf_stg a 
left outer join 
stores_depot_stg b 
on 
a.storecode=b.storecode
;



-- Add fast and slow seller mark


create external table csf_final_marked 
(
upc int, storecode int, storename string, stg string, stgname string, productcategory string, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, avgcs double, mark string
) 
row format delimited 
fields terminated by ',' stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csffinalmarked'
;

insert overwrite table csf_final_marked 
select a.*, b.avgcs, b.mark 
from 
csf_final_storename a 
inner join 
sellermark b 
on 
a.upc=b.upc
;


-- Add product category name from old file


create external table csf_final_prodcatname 
(
upc int, storecode int, storename string, stg string, stgname string, productcategory string, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, avgcs double, mark string, prodcatname string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csffinalprodcatname'
;

insert overwrite table csf_final_prodcatname 
select a.*,b.prodcatname 
from 
csf_final_marked a 
left outer join 
(select productcategory, prodcatname from victoria group by productcategory, prodcatname)b 
on 
a.productcategory=b.productcategory
;


-- add missing lead time values


create external table csf_newlead 
(
upc int, storecode int, storename string, stg string, stgname string, productcategory string, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, avgcs double, mark string, prodcatname string, newlead int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csfnewlead'
;

insert overwrite table csf_newlead 
select a.*, b.lead_time as newlead 
from 
csf_final_prodcatname a 
left outer join 
lead_time_forecast2 b 
on 
a.upc=b.upc and a.storecode=b.storecode and a.days=b.days
;



create external table csf_final1 
(
upc int, storecode int, storename string, stg string, stgname string, productcategory string, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, avgcs double, mark string, prodcatname string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csffinal1'
;

insert overwrite table csf_final1 
select upc, storecode, storename, stg, stgname, productcategory, businessdateid, days, 
case 
when leadtime is NULL 
then newlead 
else leadtime 
end as leadtime, 
day0, day1, day2, day3, day4, day5, day6, day7, day8, day9, day10, day11, day12, day13, day14, day15, day16, day17, day18, day19, day20, day21, day22, day23, day24, day25, day26, day27, customersalesquantity, correctedsalesquantity, endofdaystockquantity, ros, price, avgcs, mark, prodcatname 
from csf_newlead
;



--flagging of fast, medium, slow sellers



create external table flagsample 
(
upc int, avgcs double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/flagsample' 
;

insert overwrite table flagsample 
select upc, avg(correctedsalesquantity) avgcs 
from csf_stg 
group by upc
;


create external table sellermark 
(
upc int, avgcs double, mark string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/sellermark' 
;

insert overwrite table sellermark 
select upc, avgcs, 
case 
when 
avgcs>10 
then 'fast' 
when 
avgcs>1 and avgcs<=10 
then 'medium' 
else 'slow' 
end as mark 
from flagsample;






-- Add new flags for fast, medium and slow seller to the dataset



create external table csf_final 
(
upc int, storecode int, storename string, stg string, stgname string, productcategory string, businessdateid string, days string, leadtime int, day0 int, day1 int, day2 int, day3 int, day4 int, day5 int, day6 int, day7 int, day8 int, day9 int, day10 int, day11 int, day12 int, day13 int, day14 int, day15 int, day16 int, day17 int, day18 int, day19 int, day20 int, day21 int, day22 int, day23 int, day24 int, day25 int, day26 int, day27 int, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, ros double, price double, avgcs double, mark string, prodcatname string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/csffinal'
;

insert overwrite table csf_final 
select a.upc, a.storecode, a.storename, a.stg, a.stgname,a.productcategory, a.businessdateid, a.days, a.leadtime, a.day0, a.day1, a.day2, a.day3, a.day4, a.day5, a.day6, a.day7, a.day8, a.day9, a.day10, a.day11, a.day12, a.day13, a.day14, a.day15, a.day16, a.day17, a.day18, a.day19, a.day20, a.day21, a.day22, a.day23, a.day24, a.day25, a.day26, a.day27, a.customersalesquantity, a.correctedsalesquantity, a.endofdaystockquantity, a.ros, a.price, b.avgcs, b.mark, a.prodcatname 
from 
csf_final1 a 
left outer join 
sellermark b 
on 
a.upc=b.upc
;


--Subset analytical dataset for day-0 forecast and day-lead time forecast


create external table forecast_error 
(
upc int, productcategory string, prodcatname string, storecode int, storename string, stg string, stgname string, businessdateid string, days string, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, ros double, leadtime int, day1 int, day2 int, avgcs double, mark string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://finalforecast@saahadoop.blob.core.windows.net/forecasterror'
;

insert overwrite table forecast_error 
select upc, productcategory, prodcatname, storecode, storename, stg, stgname, businessdateid, days, customersalesquantity, correctedsalesquantity, endofdaystockquantity, price, ros, leadtime, day1, 
case when leadtime=0 then day1 
when leadtime=1 then day1 
when leadtime=2 then day2 
when leadtime=3 then day3 
when leadtime=4 then day4 
when leadtime=5 then day5 
when leadtime=6 then day6 
when leadtime=7 then day7 
when leadtime=8 then day8 
when leadtime=9 then day9 
when leadtime=10 then day10 
when leadtime=11 then day11 
when leadtime=12 then day12 
when leadtime=13 then day13 
when leadtime=14 then day14 
when leadtime=15 then day15 
when leadtime=16 then day16 
when leadtime=17 then day17 
when leadtime=18 then day18 
when leadtime=19 then day19 
when leadtime=20 then day20 
when leadtime=21 then day21 
when leadtime=22 then day22 
when leadtime=23 then day23 
when leadtime=24 then day24 
when leadtime=25 then day25 
when leadtime=26 then day26 
when leadtime=27 then day27 
else -1 
end, 
avgcs, mark 
from csf_final
;


--Sibsetting the dataset for fast and medium sellers only

create external table forecast_error_final 
(
upc int, productcategory string, prodcatname string, storecode int, storename string, stg string, stgname string, businessdateid string, days string, customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, ros double, leadtime int, previousday int, leadday int, avgcs double, mark string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://finalforecast@saahadoop.blob.core.windows.net/forecasterrorfinal'
;

insert overwrite table forecast_error_final select * from forecast_error where leadday is not NULL and previousday is not NULL and mark not like '%slow%'



--Calculate error at UPC-Store-Day level

create external table daily_error 
(
upc int, productcategory string, prodcatname string, storecode int, storename string, stg string, stgname string,  businessdateid string, days string,  customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, ros double, leadtime int, previousday int, leadday int, day1_error double, daylt_error double, avgcs double, mark string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/dailyerror'
;


insert overwrite table daily_error 
select upc, productcategory, prodcatname, storecode, storename, stg, stgname, businessdateid, days, customersalesquantity, correctedsalesquantity, endofdaystockquantity, price, ros, leadtime, previousday, leadday, 
case when previousday=0 
then
 
case when correctedsalesquantity=0 
then 0.0 
else ((previousday-correctedsalesquantity)/correctedsalesquantity) 
end 

else
 
case when correctedsalesquantity=0 
then ((previousday-correctedsalesquantity)/ros) 
else ((previousday-correctedsalesquantity)/correctedsalesquantity) 
end
 
end,
 
case when leadday=0 
then 

case when correctedsalesquantity=0 
then 0.0 
else ((leadday-correctedsalesquantity)/correctedsalesquantity) 
end 

else 

case when correctedsalesquantity=0 
then ((leadday-correctedsalesquantity)/ros) 
else ((leadday-correctedsalesquantity)/correctedsalesquantity) 
end 

end, 
avgcs, mark 
from forecast_error_final
;


-- Flag all instances where ros=0 and forecast>0


create external table daily_error_final1 
(
upc int, productcategory string, prodcatname string, storecode int, storename string, stg string, stgname string,  businessdateid string, days string,  customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, ros double, leadtime int, previousday int, leadday int, day1_error double, daylt_error double, avgcs double, mark string, flag_ros int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/dailyerrorfinal'
;

insert overwrite table daily_error_final1 
select *, 
case when 
ros = 0 and (previousday>0 or leadday>0) 
then 1 
else 0 
end as flag_ros 
from daily_error
;


-- Exclude the above mentioned instances from the final dataset


create external table dailyerror_final 
(
upc int, productcategory string, prodcatname string, storecode int, storename string, stg string, stgname string,  businessdateid string, days string,  customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, ros double, leadtime int, previousday int, leadday int, day1_error double, daylt_error double, avgcs double, mark string, flag_ros int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/dailyerror_final'
;

insert overwrite table dailyerror_final 
select * 
from daily_error_final1 
where flag_ros = 0
;


-- Create a secondary error column with absolute error values for the purpose of aggregation


create external table daily_error_abs 
(
upc int, productcategory string, prodcatname string, storecode int, storename string, stg string, stgname string,  businessdateid string, days string,  customersalesquantity int, correctedsalesquantity int, endofdaystockquantity int, price double, ros double, leadtime int, previousday int, leadday int, day1_error double, day1_abs_error double, daylt_error double, daylt_abs_error double, avgcs double, mark string
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/dailyerrorabs'
;

insert overwrite table daily_error_abs 
select upc, productcategory, prodcatname, storecode, storename, stg, stgname, businessdateid, days, customersalesquantity, correctedsalesquantity, endofdaystockquantity, price, ros, leadtime, previousday, leadday, day1_error, abs(day1_error), daylt_error, abs(daylt_error), avgcs, mark 
from dailyerror_final
;


-- Error at different levels


--Product Category level- fast/medium


create external table prodcat_error_fast1 
(
productcategory string, prodcatname string, prodcat_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/prodcaterrorfast1';
;

insert overwrite table prodcat_error_fast1 
select productcategory, prodcatname, concat(productcategory,' - ', prodcatname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) from daily_error_abs where mark like '%fast%' group by productcategory, prodcatname, concat(productcategory,' - ', prodcatname
)
;



create external table prodcat_error_medium1 
(
productcategory string, prodcatname string, prodcat_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/prodcaterrormdedium1';
;

insert overwrite table prodcat_error_medium1 
select productcategory, prodcatname, concat(productcategory,' - ', prodcatname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%medium%' 
group by productcategory, prodcatname, concat(productcategory,' - ', prodcatname)
;



--Store level- fast/medium


create external table store_error_fast1 
(
storecode int, storename string, store_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double) row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/storeerrorfast1'
;

insert overwrite table store_error_fast1 
select storecode, storename, concat(storecode, ' - ', storename), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%fast%' 
group by storecode, storename, concat(storecode, ' - ', storename)
;


create external table store_error_medium1 
(
storecode int, storename string, store_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/storeerrormedium1';
;

insert overwrite table store_error_medium1 
select storecode, storename, concat(storecode, ' - ', storename), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%medium%' 
group by storecode, storename, concat(storecode, ' - ', storename)
;



--Product category/UPC/Store group level- fast/medium

create external table pc_upc_stg_error_fast1 
(
productcategory string, prodcatname string, prodcat_details string, upc int, stg string, stgname string, stg_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/pcupcstgerrorfast1';
;

insert overwrite table pc_upc_stg_error_fast1 
select productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc, stg, stgname, concat(stg, ' - ', stgname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%fast%' 
group by productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc, stg, stgname, concat(stg, ' - ', stgname)
;



create external table pc_upc_stg_error_medium1 
(
productcategory string, prodcatname string, prodcat_details string, upc int, stg string, stgname string, stg_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/pcupcstgerrormedium1';
;

insert overwrite table pc_upc_stg_error_medium1 
select productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc, stg, stgname, concat(stg, ' - ', stgname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%medium%' 
group by productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc, stg, stgname, concat(stg, ' - ', stgname)
;



--Product/UPC level- fast/medium

create external table pc_upc_error_fast1 
(
productcategory string, prodcatname string, prodcat_details string, upc int, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/pcupcerrorfast1'
;

insert overwrite table pc_upc_error_fast1 
select productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc, sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%fast%' 
group by productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc
;



create external table pc_upc_error_medium1 
(
productcategory string, prodcatname string, prodcat_details string, upc int, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/pcupcerrormedium1'
;

insert overwrite table pc_upc_error_medium1 
select productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc, sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%medium%' 
group by productcategory, prodcatname, concat(productcategory,' - ', prodcatname), upc
;



--UPC/Store group level- fast/medium

create external table upc_stg_error_fast1 
(
upc int, stg string, stgname string, stg_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/upcstgerrorfast1';
;

insert overwrite table upc_stg_error_fast1 
select upc, stg, stgname, concat(stg, ' - ', stgname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error
) 
from daily_error_abs 
where mark like '%fast%' 
group by upc, stg, stgname, concat(stg, ' - ', stgname)
;



create external table upc_stg_error_medium1 
(
upc int, stg string, stgname string, stg_details string, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/upcstgerrormedium1'
;

insert overwrite table upc_stg_error_medium1 
select upc, stg, stgname, concat(stg, ' - ', stgname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error
) 
from daily_error_abs 
where mark like '%medium%' 
group by upc, stg, stgname, concat(stg, ' - ', stgname)
;



--Fast/medium/slow upc by productcategory  (avg corrected sales for each upc is also provided in case you need to split it into further buckets)


create external table upc_in_prodcat_byflag1 
(
productcategory string, prodcatname string, prodcat_details string, stg string, stgname string, stg_details string, mark string, avgcs double, upc int
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/upcinprodcatbyflag1'
;

insert overwrite table upc_in_prodcat_byflag1 
select productcategory, prodcatname,concat(productcategory,' - ', prodcatname), stg, stgname, concat(stg, ' - ', stgname), mark, avgcs, upc 
from forecast_error 
group by productcategory, prodcatname,concat(productcategory,' - ', prodcatname), stg, stgname, concat(stg, ' - ', stgname), mark, avgcs, upc
; 



-- UPC/Store level- fast/medium

create external table upc_store_error_fast1 
(
upc int, productcategory string, prodcatname string,prodcat_details string, storecode int, storename string, store_details string,  stg string, stgname string, stg_details int, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/upcstoreerrorfast1'
;

insert overwrite table upc_store_error_fast1 
select upc, productcategory, prodcatname, concat(productcategory,' - ', prodcatname), storecode, storename, concat(storecode, ' - ', storename), stg, stgname, concat(stg, ' - ', stgname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%fast%' 
group by upc, productcategory, prodcatname, concat(productcategory,' - ', prodcatname), storecode, storename, concat(storecode, ' - ', storename), stg, stgname, concat(stg, ' - ', stgname)
;



create external table upc_store_error_medium1 
(
upc int, productcategory string, prodcatname string,prodcat_details string, storecode int, storename string, store_details string,  stg string, stgname string, stg_details int, actualsales int, correctedsales int, avgprice double, avg_day1_error double, avg_daylt_error double
) 
row format delimited 
fields terminated by ',' 
stored as textfile 
location 'asv://errordataset@saahadoop.blob.core.windows.net/upcstoreerrormedium1'
;

insert overwrite table upc_store_error_medium1 
select upc, productcategory, prodcatname, concat(productcategory,' - ', prodcatname), storecode, storename, concat(storecode, ' - ', storename), stg, stgname, concat(stg, ' - ', stgname), sum(customersalesquantity), sum(correctedsalesquantity), avg(price), avg(day1_abs_error), avg(daylt_abs_error) 
from daily_error_abs 
where mark like '%medium%' 
group by upc, productcategory, prodcatname, concat(productcategory,' - ', prodcatname), storecode, storename, concat(storecode, ' - ', storename), stg, stgname, concat(stg, ' - ', stgname)
;
